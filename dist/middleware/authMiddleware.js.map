{"version":3,"file":"authMiddleware.js","sourceRoot":"","sources":["../../src/middleware/authMiddleware.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,oDAA4B;AAC5B,wDAAgC;AAChC,+CAAmE;AAEnE,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;AACzC,IAAI,CAAC,UAAU,EAAE,CAAC;IAChB,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;AACnE,CAAC;AAED,kCAAkC;AAClC,kBAAQ,CAAC,GAAG,CACV,IAAI,uBAAW,CACb;IACE,cAAc,EAAE,yBAAU,CAAC,2BAA2B,EAAE;IACxD,WAAW,EAAE,UAAU;CACxB,EACD,CAAO,OAAO,EAAE,IAAI,EAAE,EAAE;IACtB,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC7B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC5B,CAAC;AACH,CAAC,CAAA,CACF,CACF,CAAC;AAEF,sBAAsB;AACT,QAAA,kBAAkB,GAAG,kBAAQ,CAAC,UAAU,EAAE,CAAC;AAExD,4BAA4B;AACf,QAAA,cAAc,GAAG,kBAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport dotenv from \"dotenv\";\nimport passport from \"passport\";\nimport { Strategy as JwtStrategy, ExtractJwt } from \"passport-jwt\";\n\ndotenv.config();\n\nconst JWT_SECRET = process.env.SECRETKEY;\nif (!JWT_SECRET) {\n  throw new Error(\"SECRETKEY environment variable is not defined\");\n}\n\n// Configure Passport JWT strategy\npassport.use(\n  new JwtStrategy(\n    {\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(), \n      secretOrKey: JWT_SECRET, \n    },\n    async (payload, done) => {\n      try {\n        return done(null, payload); \n      } catch (error) {\n        return done(error, false); \n      }\n    }\n  )\n);\n\n// Initialize Passport\nexport const initializePassport = passport.initialize();\n\n// Authentication middleware\nexport const authMiddleware = passport.authenticate(\"jwt\", { session: false });"]}