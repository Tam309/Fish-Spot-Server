{"version":3,"file":"CommentController.js","sourceRoot":"","sources":["../../src/controller/CommentController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,0DAAkC;AAClC,0DAAkC;AAClC,wDAAgC;AAEhC,uBAAuB;AAChB,MAAM,aAAa,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;;IACnF,IAAI,CAAC;QACD,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QAErC,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;YACtB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC,CAAC;QAClF,CAAC;QAED,MAAM,MAAM,GAAG,MAAC,GAAG,CAAC,IAAuB,0CAAE,EAAE,CAAC;QAEhD,IAAI,CAAC,MAAM,EAAE,CAAC;YACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC,CAAC;QAClF,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,EAAE,CAAC;YACR,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAChE,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC;QAC7E,IAAI,CAAC,IAAI,EAAE,CAAC;YACR,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAChE,CAAC;QAED,MAAM,OAAO,GAAG;YACZ,GAAG,EAAE,IAAI,kBAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE;YAClC,OAAO,EAAE,IAAI,kBAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC5C,OAAO,EAAE,MAAM;YACf,OAAO;YACP,SAAS,EAAE,IAAI,IAAI,EAAE;SACxB,CAAC;QAEF,MAAA,IAAI,CAAC,QAAQ,0CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7B,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QAElB,MAAM,eAAe,mCACd,OAAO,KACV,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,MAAM,EAAE,IAAI,CAAC,MAAM,GACtB,CAAC;QAEF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC,CAAC;IACjG,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,CAAC,CAAC;IAChB,CAAC;AACL,CAAC,CAAA,CAAC;AA9CW,QAAA,aAAa,iBA8CxB;AAEF,8BAA8B;AACvB,MAAM,WAAW,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACjF,IAAI,CAAC;QACD,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAE9B,IAAI,CAAC,MAAM,EAAE,CAAC;YACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,sBAAsB,EAAE,CAAC,CAAC;QACrE,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,kBAAkB,EAAE,2BAA2B,CAAC,CAAC;QACnG,IAAI,CAAC,IAAI,EAAE,CAAC;YACR,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAChE,CAAC;QAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACtD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,CAAC,CAAC;IAChB,CAAC;AACL,CAAC,CAAA,CAAA;AAjBY,QAAA,WAAW,eAiBvB;AAED,cAAc;AACP,MAAM,WAAW,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;;IACjF,IAAI,CAAC;QACD,MAAM,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QAC7B,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAEjC,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO,EAAE,CAAC;YACzB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC,CAAC;QACrF,CAAC;QAED,MAAM,MAAM,GAAG,MAAC,GAAG,CAAC,IAAuB,0CAAE,EAAE,CAAC;QAEhD,IAAI,CAAC,MAAM,EAAE,CAAC;YACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC,CAAC;QAClF,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,EAAE,cAAc,EAAE,SAAS,EAAE,kBAAkB,EAAE,MAAM,EAAE,CAAC,CAAC;QAE3F,IAAI,CAAC,IAAI,EAAE,CAAC;YACR,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,6DAA6D,EAAE,CAAC,CAAC;QAC5G,CAAC;QAED,MAAM,OAAO,GAAG,MAAA,IAAI,CAAC,QAAQ,0CAAE,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,CAAC;QACvF,IAAI,CAAC,OAAO,EAAE,CAAC;YACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC,CAAC;QACnE,CAAC;QACD,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1B,OAAO,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QAElB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,OAAO,EAAE,CAAC,CAAC;IAChF,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,CAAC,CAAC;IAChB,CAAC;AACL,CAAC,CAAA,CAAC;AAjCW,QAAA,WAAW,eAiCtB;AAEF,iBAAiB;AACV,MAAM,aAAa,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;;IACnF,IAAI,CAAC;QACD,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAEjC,IAAI,CAAC,SAAS,EAAE,CAAC;YACb,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,CAAC;QACxE,CAAC;QAED,MAAM,MAAM,GAAG,MAAC,GAAG,CAAC,IAAuB,0CAAE,EAAE,CAAC;QAEhD,IAAI,CAAC,MAAM,EAAE,CAAC;YACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC,CAAC;QAClF,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,EAAE,cAAc,EAAE,SAAS,EAAE,kBAAkB,EAAE,MAAM,EAAE,CAAC,CAAC;QAE3F,IAAI,CAAC,IAAI,EAAE,CAAC;YACR,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+DAA+D,EAAE,CAAC,CAAC;QAC9G,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,MAAA,IAAI,CAAC,QAAQ,0CAAE,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,CAAC;QACzF,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QAElB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC,CAAC;IACvE,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,CAAC,CAAC;IAChB,CAAC;AACL,CAAC,CAAA,CAAC;AA3BW,QAAA,aAAa,iBA2BxB","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport User from \"../models/User\";\nimport Post from \"../models/Post\"; \nimport mongoose from \"mongoose\";\n\n// Create a new comment\nexport const createComment = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        const { postId, content } = req.body;\n\n        if (!postId || !content) {\n            return res.status(400).json({ message: \"Post ID and content are required.\" });\n        }\n\n        const userId = (req.user as { id: string })?.id;\n\n        if (!userId) {\n            return res.status(401).json({ message: \"Unauthorized. User ID is missing.\" });\n        }\n\n        const post = await Post.findById(postId);\n        if (!post) {\n            return res.status(404).json({ message: \"Post not found.\" });\n        }\n\n        const user = await User.findById(userId).select(\"username nick_name avatar\");\n        if (!user) {\n            return res.status(404).json({ message: \"User not found.\" });\n        }\n\n        const comment = {\n            _id: new mongoose.Types.ObjectId(),\n            user_id: new mongoose.Types.ObjectId(userId),\n            post_id: postId,\n            content,\n            createdAt: new Date()\n        };\n\n        post.comments?.push(comment);\n        await post.save();\n\n        const responseComment = {\n            ...comment,\n            username: user.username,\n            nick_name: user.nick_name,\n            avatar: user.avatar,\n        };\n\n        res.status(201).json({ message: \"Comment created successfully.\", comment: responseComment });\n    } catch (error) {\n        next(error);\n    }\n};\n\n// Get all comments for a post\nexport const getComments = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        const { postId } = req.params;\n\n        if (!postId) {\n            return res.status(400).json({ message: \"Post ID is required.\" });\n        }\n\n        const post = await Post.findById(postId).populate('comments.user_id', 'username avatar nick_name');\n        if (!post) {\n            return res.status(404).json({ message: \"Post not found.\" });\n        }\n\n        res.status(200).json({ comments: post.comments });\n    } catch (error) {\n        next(error);\n    }\n}\n\n//Edit comment\nexport const editComment = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        const { content } = req.body;\n        const { commentId } = req.params;\n\n        if (!commentId || !content) {\n            return res.status(400).json({ message: \"Comment ID and content are required.\" });\n        }\n\n        const userId = (req.user as { id: string })?.id;\n\n        if (!userId) {\n            return res.status(401).json({ message: \"Unauthorized. User ID is missing.\" });\n        }\n\n        const post = await Post.findOne({ \"comments._id\": commentId, \"comments.user_id\": userId });\n\n        if (!post) {\n            return res.status(404).json({ message: \"Comment not found or you do not have permission to edit it.\" });\n        }\n\n        const comment = post.comments?.find((comment) => comment._id.toString() === commentId);\n        if (!comment) {\n            return res.status(404).json({ message: \"Comment not found.\" });\n        }\n        comment.content = content;\n        comment.createdAt = new Date();\n        await post.save();\n\n        res.status(200).json({ message: \"Comment updated successfully.\", comment });\n    } catch (error) {\n        next(error);\n    }\n};\n\n// Delete comment\nexport const deleteComment = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        const { commentId } = req.params;\n\n        if (!commentId) {\n            return res.status(400).json({ message: \"Comment ID is required.\" });\n        }\n\n        const userId = (req.user as { id: string })?.id;\n\n        if (!userId) {\n            return res.status(401).json({ message: \"Unauthorized. User ID is missing.\" });\n        }\n\n        const post = await Post.findOne({ \"comments._id\": commentId, \"comments.user_id\": userId });\n\n        if (!post) {\n            return res.status(404).json({ message: \"Comment not found or you do not have permission to delete it.\" });\n        }\n\n        post.comments = post.comments?.filter((comment) => comment._id.toString() !== commentId);\n        await post.save();\n\n        res.status(200).json({ message: \"Comment deleted successfully.\" });\n    } catch (error) {\n        next(error);\n    }\n};"]}